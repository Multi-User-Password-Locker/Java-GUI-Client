/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package me.camerongray.teamlocker.gui_client;

import java.awt.event.ActionEvent;
import java.io.IOException;
import java.util.HashMap;
import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;
import javax.swing.table.DefaultTableModel;
import me.camerongray.teamlocker.core.CryptoException;
import me.camerongray.teamlocker.core.Folder;
import me.camerongray.teamlocker.core.FolderPermission;
import me.camerongray.teamlocker.core.Locker;
import me.camerongray.teamlocker.core.LockerCommunicationException;
import me.camerongray.teamlocker.core.LockerSimpleException;
import me.camerongray.teamlocker.core.User;

/**
 *
 * @author camerong
 */
public class UserIndex extends javax.swing.JDialog {  
    private ButtonColumn bcEdit;
    private StatusBar statusBar;
    java.awt.Frame parent;
    private HashMap<Integer, Integer> rowUserIds = new HashMap<>();
    /**
     * Creates new form UserIndex
     */
    public UserIndex(java.awt.Frame parent, boolean modal, User[] users) {
        super(parent, modal);
        initComponents();
        this.statusBar = new StatusBar(lblStatus, pgbProgress);
        this.statusBar.hide();
        this.parent = parent;
        
        // Table buttons - Column indices below must be kept up to date with the form
        final int EDIT_COLUMN_INDEX = 4;
        this.bcEdit = new ButtonColumn(tblUsers,
            new javax.swing.AbstractAction() {
                @Override
                public void actionPerformed(ActionEvent evt) {
                    int userId = rowUserIds.get(Integer.parseInt(evt.getActionCommand()));
                    statusBar.setStatus("Getting User...", true);
                    (new EditUserTask(UserIndex.this, userId)).run();
                }
            }
        ,EDIT_COLUMN_INDEX);
        
        DefaultTableModel model = (DefaultTableModel)tblUsers.getModel();
        int rowNum = 0;
        for (User user : users) {
            model.addRow(new Object[]{user.getFullName(), user.getUsername(),
                (user.isAdmin()) ? "Administrator" : "Standard User", user.getEmail(), "Edit User"});
            this.rowUserIds.put(rowNum, user.getId());
            rowNum++;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnClose = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsers = new javax.swing.JTable();
        btnNewUser = new javax.swing.JButton();
        panelStatus = new javax.swing.JPanel();
        lblStatus = new javax.swing.JLabel();
        pgbProgress = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Manage Users");
        setLocationByPlatform(true);

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        tblUsers.setAutoCreateRowSorter(true);
        tblUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Full Name", "Username", "Type", "Email", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblUsers.setRowHeight(20);
        tblUsers.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblUsers);
        if (tblUsers.getColumnModel().getColumnCount() > 0) {
            tblUsers.getColumnModel().getColumn(4).setCellEditor(this.bcEdit);
        }

        btnNewUser.setText("New User");
        btnNewUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewUserActionPerformed(evt);
            }
        });

        lblStatus.setText("NONE");

        javax.swing.GroupLayout panelStatusLayout = new javax.swing.GroupLayout(panelStatus);
        panelStatus.setLayout(panelStatusLayout);
        panelStatusLayout.setHorizontalGroup(
            panelStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelStatusLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pgbProgress, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelStatusLayout.setVerticalGroup(
            panelStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelStatusLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pgbProgress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 625, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnClose)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(panelStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnNewUser)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNewUser)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnClose))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnNewUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewUserActionPerformed
        statusBar.setStatus("Getting folders...", true);
        (new NewUserTask(this)).execute();
    }//GEN-LAST:event_btnNewUserActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnNewUser;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JPanel panelStatus;
    private javax.swing.JProgressBar pgbProgress;
    private javax.swing.JTable tblUsers;
    // End of variables declaration//GEN-END:variables

    class NewUserTask extends SwingWorker<Folder[], Object> {
        javax.swing.JDialog indexDialog;
        public NewUserTask(javax.swing.JDialog indexDialog) {
            this.indexDialog = indexDialog;
        }
        
        public Folder[] doInBackground() throws LockerCommunicationException, IOException, LockerSimpleException {
            Folder[] folders = Folder.getAllFromServer();
            return folders;
        }
        
        public void done() {
            statusBar.hide();
            try {
                Folder[] folders = get();
                (new UserForm(parent, true, indexDialog, folders)).setVisible(true);
            } catch (Exception e) {
                ExceptionHandling.handleSwingWorkerException(parent, e);
            }
        }
    }
    
    class EditUserTask extends SwingWorker<Folder[], Object> {
        javax.swing.JDialog indexDialog;
        int userId;
        public EditUserTask(javax.swing.JDialog indexDialog, int userId) {
            this.indexDialog = indexDialog;
            this.userId = userId;
        }
        
        public Folder[] doInBackground() throws LockerCommunicationException, IOException, LockerSimpleException, CryptoException {
            Folder[] folders = Folder.getAllFromServer();
            User user = User.getFromServer(userId);
            System.out.println(user.getFullName());
            FolderPermission[] permissions = User.getPermissionsFromServer(user);
            for (FolderPermission permission : permissions) {
                System.out.println(permission.getFolder().getId());
            }
            return folders; // TODO - Return all variables above
        }
        
        public void done() {
            statusBar.hide();
//            try {
//                Folder[] folders = get();
//                (new UserForm(parent, true, indexDialog, folders)).setVisible(true);
//            } catch (Exception e) {
//                ExceptionHandling.handleSwingWorkerException(parent, e);
//            }
        }
    }
}
