/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package me.camerongray.teamlocker.gui_client;

import me.camerongray.teamlocker.core.User;
import me.camerongray.teamlocker.core.Folder;
import me.camerongray.teamlocker.core.LockerRuntimeException;
import me.camerongray.teamlocker.core.Account;
import me.camerongray.teamlocker.core.Locker;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import me.camerongray.teamlocker.core.CryptoException;
import me.camerongray.teamlocker.core.LockerCommunicationException;
import me.camerongray.teamlocker.core.LockerSimpleException;

/**
 *
 * @author camerong
 */
public class AccountForm extends javax.swing.JDialog {
    public static final int EDIT_MODE = 0;
    public static final int NEW_MODE = 1;
    public static final int VIEW_MODE = 2;
    private int mode;
    private Locker locker;
    private Folder folder;
    private MainWindow parent;
    private Account account;
    private User user;
    private boolean passwordChanged = false;
    private StatusBar statusBar;

    
    // Show form for creating new account
    public AccountForm(MainWindow parent, boolean modal, Folder folder) {
        super(parent, modal);
        initComponents();
        statusBar = new StatusBar(lblStatus, pgbProgress);
        statusBar.hide();
        this.locker = Locker.getInstance();
        this.mode = mode;
        this.folder = folder;
        this.parent = parent;
        this.mode = AccountForm.NEW_MODE;
        this.setTitle("New Account - TeamLocker");
        btnSubmit.setText("Add Account");
        btnCancel.setText("Cancel");
        btnGetPassword.setVisible(false);
        btnChangePassword.setVisible(false);
        btnDelete.setVisible(false);
        this.getRootPane().setDefaultButton(btnSubmit);
    }
    
    // Show form for viewing/editing an existing account
    public AccountForm(MainWindow parent, boolean modal, User user, Account account, Folder folder) {
        super(parent, modal);
        initComponents();
        statusBar = new StatusBar(lblStatus, pgbProgress);
        statusBar.hide();
        this.locker = Locker.getInstance();        
        this.parent = parent;
        this.account = account;
        this.user = user;
        this.folder = folder;
        if (folder.isWrite()) {
            this.mode = AccountForm.EDIT_MODE;
            this.setTitle("View/Edit Account - TeamLocker");
            btnSubmit.setText("Save Account");
            this.getRootPane().setDefaultButton(btnSubmit);
        } else {
            this.mode = AccountForm.VIEW_MODE;
            this.setTitle("View Account - TeamLocker");
            btnSubmit.setVisible(false);
            btnChangePassword.setVisible(false);
            btnDelete.setVisible(false);
        }
        panelPasswordField.setVisible(false);
        lblPassword.setVisible(false);
        btnCancel.setText("Close");
        this.txtAccountName.setText(this.account.getName());
        this.txtUsername.setText(this.account.getUsername());
        this.txtNotes.setText(this.account.getNotes());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtAccountName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtNotes = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        panelPasswordField = new javax.swing.JPanel();
        txtPassword = new javax.swing.JPasswordField();
        chkShowPassword = new javax.swing.JCheckBox();
        btnGetPassword = new javax.swing.JButton();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(1, 0), new java.awt.Dimension(1, 0), new java.awt.Dimension(1, 32767));
        btnSubmit = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        panelStatus = new javax.swing.JPanel();
        lblStatus = new javax.swing.JLabel();
        pgbProgress = new javax.swing.JProgressBar();
        btnChangePassword = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocationByPlatform(true);

        jLabel1.setText("Account Name");

        jLabel2.setText("Username");

        lblPassword.setText("Password");

        txtNotes.setColumns(20);
        txtNotes.setRows(5);
        jScrollPane1.setViewportView(txtNotes);

        jLabel4.setText("Notes");

        chkShowPassword.setText("Show Password");
        chkShowPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkShowPasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelPasswordFieldLayout = new javax.swing.GroupLayout(panelPasswordField);
        panelPasswordField.setLayout(panelPasswordFieldLayout);
        panelPasswordFieldLayout.setHorizontalGroup(
            panelPasswordFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPasswordFieldLayout.createSequentialGroup()
                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkShowPassword)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelPasswordFieldLayout.setVerticalGroup(
            panelPasswordFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPasswordFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(chkShowPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        btnGetPassword.setText("Get Password");
        btnGetPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetPasswordActionPerformed(evt);
            }
        });

        btnSubmit.setText(" ");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        btnCancel.setText(" ");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lblStatus.setText("NONE");
        lblStatus.setToolTipText("");

        javax.swing.GroupLayout panelStatusLayout = new javax.swing.GroupLayout(panelStatus);
        panelStatus.setLayout(panelStatusLayout);
        panelStatusLayout.setHorizontalGroup(
            panelStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelStatusLayout.createSequentialGroup()
                .addComponent(lblStatus)
                .addGap(7, 7, 7)
                .addComponent(pgbProgress, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE))
        );
        panelStatusLayout.setVerticalGroup(
            panelStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelStatusLayout.createSequentialGroup()
                .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panelStatusLayout.createSequentialGroup()
                .addComponent(pgbProgress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        btnChangePassword.setText("Change Password");
        btnChangePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangePasswordActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete Account");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(lblPassword)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnGetPassword)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnChangePassword))
                                    .addComponent(panelPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 43, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtAccountName, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtUsername, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(filler3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(panelStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSubmit)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtAccountName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lblPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelPasswordField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGetPassword)
                    .addComponent(btnChangePassword))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filler3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSubmit)
                        .addComponent(btnCancel)
                        .addComponent(btnDelete))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        String operation = (this.mode == AccountForm.NEW_MODE) ? "Adding" : "Saving";
        statusBar.setStatus(operation + " Account...", true);
        (new SubmitAccountFormTask(this)).execute();
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void chkShowPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkShowPasswordActionPerformed
        if (chkShowPassword.isSelected()) {
            txtPassword.setEchoChar('\0'); // Null character unmasks password
        } else {
            // The mask character used varies based on Look and Feel so we get
            // the character by creating a new password field
            char maskChar = (new javax.swing.JPasswordField()).getEchoChar();
            txtPassword.setEchoChar(maskChar);
        }
    }//GEN-LAST:event_chkShowPasswordActionPerformed

    private void btnGetPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetPasswordActionPerformed
        statusBar.setStatus("Getting Password...", true);
        (new GetPasswordTask(this)).execute();
    }//GEN-LAST:event_btnGetPasswordActionPerformed

    private void btnChangePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangePasswordActionPerformed
        lblPassword.setVisible(true);
        panelPasswordField.setVisible(true);
        btnGetPassword.setVisible(false);
        btnChangePassword.setVisible(false);
        this.passwordChanged = true;
    }//GEN-LAST:event_btnChangePasswordActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure that you "+
                "want to delete \""+this.account.getName()+"\"?", "Delete Account",
                JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.NO_OPTION) {
            return;
        }
        statusBar.setStatus("Deleting Account...", true);
        (new DeleteAccountTask(this)).execute();
    }//GEN-LAST:event_btnDeleteActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnChangePassword;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnGetPassword;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JCheckBox chkShowPassword;
    private javax.swing.Box.Filler filler3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JPanel panelPasswordField;
    private javax.swing.JPanel panelStatus;
    private javax.swing.JProgressBar pgbProgress;
    private javax.swing.JTextField txtAccountName;
    private javax.swing.JTextArea txtNotes;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
    
    class GetPasswordTask extends SwingWorker<String, Object> {
        private AccountForm parent;
        
        public GetPasswordTask(AccountForm parent) {
            this.parent = parent;
        }
        
        @Override
        public String doInBackground() throws LockerSimpleException, CryptoException, LockerCommunicationException {
            String password = this.parent.account.getPasswordFromServer(this.parent.user.getPrivateKey());
            return password;
        }
        
        @Override
        public void done() {
            statusBar.hide();
            String password;
            try {
                password = get();
            } catch (Exception e) {
                ExceptionHandling.handleSwingWorkerException(this.parent.parent, e);
                return;
            }
            txtPassword.setText(password);
            txtPassword.setEchoChar('\0'); // Null character unmasks password
            chkShowPassword.setSelected(true);
            lblPassword.setVisible(true);
            panelPasswordField.setVisible(true);
            btnGetPassword.setVisible(false);
            btnChangePassword.setVisible(false);
            this.parent.passwordChanged = true;
        }
    }
    
    class SubmitAccountFormTask extends SwingWorker<Void, Object> {
        public AccountForm parent;
        
        public SubmitAccountFormTask(AccountForm parent) {
            this.parent = parent;
        }
        
        @Override
        public Void doInBackground() throws LockerCommunicationException, CryptoException, LockerRuntimeException, LockerSimpleException {
            if (this.parent.mode == AccountForm.NEW_MODE) {
                Account account = new Account(this.parent.txtAccountName.getText(), this.parent.txtUsername.getText(),
                        this.parent.txtNotes.getText(), new String(this.parent.txtPassword.getPassword()));
                account.addToServer(this.parent.folder);
            } else if (this.parent.mode == AccountForm.EDIT_MODE) {
                String password;
                if (this.parent.passwordChanged) {
                    password = new String(this.parent.txtPassword.getPassword());
                } else {
                    // TODO: Can be avoided once issue Resources/#1 is resolved
                    password = this.parent.account.getPasswordFromServer(this.parent.user.getPrivateKey());
                }
                Account a = this.parent.account;
                a.setName(this.parent.txtAccountName.getText());
                a.setUsername(this.parent.txtUsername.getText());
                a.setNotes(this.parent.txtNotes.getText());
                a.setPassword(password);
                
                a.updateOnServer(this.parent.folder);
            }
            return null;
        }
        
        @Override
        public void done() {
            statusBar.hide();
            try {
                this.get();
            } catch (Exception e) {
                ExceptionHandling.handleSwingWorkerException(this.parent.parent, e);
                return;
            }
            this.parent.parent.refreshFolderAccounts();
            this.parent.dispose();
        }
    }
    
    class DeleteAccountTask extends SwingWorker<Void, Object> {
        private AccountForm parent;
        
        public DeleteAccountTask(AccountForm parent) {
            this.parent = parent;
        }
        
        @Override
        public Void doInBackground() throws LockerSimpleException, LockerCommunicationException {
            this.parent.account.deleteFromServer();
            return null;
        }
        
        @Override
        public void done() {
            statusBar.hide();
            try {
                get();
            } catch (Exception e) {
                ExceptionHandling.handleSwingWorkerException(this.parent.parent, e);
                return;
            }
            this.parent.dispose();
            this.parent.parent.refreshFolderAccounts();
        }
    }
}
